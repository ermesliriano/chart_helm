apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "database.fullname" . | default (printf "%s-database" .Release.Name) }}
  labels:
    app.kubernetes.io/name: database
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: database
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: database
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: mysql
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["--default-authentication-plugin=mysql_native_password"]
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: {{ .Values.mysqlRootPassword | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.mysqlDatabase | quote }}
            - name: MYSQL_USER
              value: {{ .Values.mysqlUser | quote }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.mysqlPassword | quote }}
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: data
          {{- if .Values.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
          {{- else if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "database.fullname" . | default (printf "%s-database" .Release.Name) }}-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
